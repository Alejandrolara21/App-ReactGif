{"version":3,"sources":["components/AgregarCategoria.jsx","helpers/getGifs.js","components/ItemGif.jsx","components/ListaGif.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AgregarCategoria","setCategorias","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","categoria","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","ItemGif","src","alt","ListaGif","loading","state","setstate","useEffect","then","imgs","useFetchGifs","imagenes","GifExpertApp","categorias","cate","ReactDOM","render","document","getElementById"],"mappings":"gMAGMA,EAAmB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEvB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,qBAAKC,UAAU,aAAf,SACI,uBAAOA,UAAU,aAAaC,SAVf,SAACC,GACpBA,EAAEC,iBACCL,EAAWM,OAAOC,OAAQ,IACzBT,GAAc,SAAAU,GAAS,MAAI,CAACR,MAC5BC,EAAc,MAMd,UACI,gDACA,uBAAOQ,KAAK,OAAOC,MAAOV,EAAYW,SAhBzB,SAACP,GACtBH,EAAcG,EAAEQ,OAAOF,gB,8BCRzBG,EAAO,uCAAG,WAAML,GAAN,uBAAAM,EAAA,6DACNC,EADM,0FACmFC,UAAUR,GAD7F,qBAGYS,MAAMF,GAHlB,cAGNG,EAHM,gBAISA,EAAUC,OAJnB,uBAILC,EAJK,EAILA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV9B,kBAcLM,GAdK,4CAAH,sDCEPO,EAAU,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IACvB,OACI,sBAAKb,UAAU,mCAAf,UACI,4BAAIuB,IACJ,qBAAKvB,UAAU,SAAS2B,IAAKd,EAAKe,IAAKL,QCA7CM,G,MAAW,SAAC,GAAiB,IAAhBvB,EAAe,EAAfA,UAEf,ECLwB,SAACA,GACzB,MAA0BT,mBAAS,CAC/BqB,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACPtB,EAAQL,GACH4B,MAAK,SAAAC,GACFH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAGvB,CAACxB,IAEIyB,EDX0BK,CAAa9B,GAAvCwB,EAAP,EAAOA,QAAcO,EAArB,EAAgBnB,KAEhB,OACI,gCACI,6BAAKZ,IACJwB,GAAW,mBAAG9B,UAAU,mBAAb,qCACZ,qBAAKA,UAAU,6BAAf,SAEYqC,EAASjB,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA0BA,GAAZA,EAAIC,cEZxDgB,EAAe,WAEjB,MAAoCzC,mBAAS,CAAC,gBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,gCACI,8CACA,cAAC,EAAD,CAAkBA,cAAeA,IACjC,6BAEQ2C,EAAWnB,KAAK,SAAAoB,GAAI,OACf,cAAC,EAAD,CAAqBlC,UAAWkC,GAAjBA,YCVxCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0ed87b0c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AgregarCategoria = ({setCategorias}) => {\n\n    const [inputValue, setInputValue] = useState(\"\");\n\n    const agregarCategoria = (e) =>{\n        setInputValue(e.target.value);\n    }\n\n    const enterCategoria = (e) =>{\n        e.preventDefault();\n        if(inputValue.trim().length >2){\n            setCategorias(categoria => [inputValue]);\n            setInputValue(\"\");\n        }\n    }\n\n    return (\n        <div className=\"contenedor\">\n            <form  className=\"formulario\" onSubmit={enterCategoria}>\n                <label>Categoria: </label>\n                <input type=\"text\" value={inputValue} onChange={agregarCategoria}/>\n            </form>\n        </div>\n    )\n}\n\nAgregarCategoria.propTypes = {\n    setCategorias: PropTypes.func.isRequired\n}\n\nexport {AgregarCategoria};","const getGifs = async(categoria) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=PGInBkyj9PDcwMhjGR92E4MeAg9aAXRD&q=${encodeURI(categoria)}&limit=5`;\n\n    const respuesta = await fetch(url);\n    const {data} = await respuesta.json();\n\n    const gifs = data.map(img =>{\n        return {\n            id:img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}\n\nexport {getGifs};","import React from 'react';\n\nconst ItemGif = ({id,title,url}) => {\n    return (\n        <div className=\"contenedor animate__jackInTheBox\">\n            <p>{title}</p>\n            <img className=\"imagen\" src={url} alt={title} />\n        </div>\n    )\n}\n\nexport {ItemGif};\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n// import { getGifs } from '../helpers/getGifs';\nimport { ItemGif } from './ItemGif';\nimport 'animate.css';\n\nconst ListaGif = ({categoria}) => {\n\n    const {loading, data:imagenes} = useFetchGifs(categoria);\n\n    return (\n        <div>\n            <h3>{categoria}</h3>\n            {loading && <p className=\"animate__rollOut\">Cargando Informacion...</p>}\n            <div className=\"card-grid animate__rollOut\">\n                    {\n                        imagenes.map(img => <ItemGif key={img.id} {...img}/>)\n                    }\n            </div>\n        </div>\n    )\n}\n\nexport {ListaGif};","import { useState,useEffect } from \"react\";\nimport {getGifs} from \"../helpers/getGifs\"\n\nexport const useFetchGifs = (categoria) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () =>{\n        getGifs(categoria)\n            .then(imgs =>{\n                setstate({\n                    data: imgs,\n                    loading: false\n                })\n            })\n    },[categoria]);\n\n    return state;\n}\n","import React, {useState} from 'react'\nimport { AgregarCategoria } from './components/AgregarCategoria';\nimport { ListaGif } from './components/ListaGif';\n\nconst GifExpertApp = () => {\n\n    const [categorias, setCategorias] = useState(['Dragon ball']);\n\n    return (\n        <div>\n            <h2>GifExpertAPP</h2>\n            <AgregarCategoria setCategorias={setCategorias} />\n            <ul>\n                {\n                    categorias.map( cate =>\n                         <ListaGif key={cate} categoria={cate} />\n                    )\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport {GifExpertApp};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp.jsx';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}